name: Java CI

on: [push, pull_request]

env:
  GRADLE_ARGS: "--info --stacktrace --no-daemon"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK
      uses: actions/setup-java@v1
      with:
        java-version: 13

    - name: Cache gradle wrapper
      uses: actions/cache@v2
      with:
        path: ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('gradle/wrapper/gradle-wrapper.properties') }}
        restore-keys: ${{ runner.os }}-gradle-wrapper

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle', '**/*.gradle.kts') }}
        restore-keys: ${{ runner.os }}-gradle

    - name: Assemble and run tests
      run: |
        set -eux
        if [[ $GITHUB_REF == refs/tags/v* ]]; then
          GRADLE_ARGS="$GRADLE_ARGS -Prelease=true"
        fi
        if [[ $GITHUB_REF == refs/tags/v*-es* ]]; then
          ES_VERSION=$(echo $GITHUB_REF | sed 's/refs\/tags\/v.*-es\(.*\)/\1/')
          GRADLE_ARGS="$GRADLE_ARGS -PesVersion=$ES_VERSION"
        fi
        ./gradlew assemble $GRADLE_ARGS
        ls -lh jmorphy2-elasticsearch/build/distributions
        ./gradlew check $GRADLE_ARGS

    - uses: actions/upload-artifact@v2
      if: |
        github.event_name == 'push' &&
        startsWith(github.ref, 'refs/tags/v') &&
        contains(github.ref, '-es')
      with:
        name: elasticsearch-plugin
        path: |
          jmorphy2-elasticsearch/build/distributions/*.zip
          jmorphy2-elasticsearch/build/distributions/*.deb

  release_es_plugin:
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push' &&
      startsWith(github.ref, 'refs/tags/v') &&
      contains(github.ref, '-es')
    needs:
    - build
    steps:
    - uses: actions/download-artifact@v2
      with:
        name: elasticsearch-plugin

    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false

    - name: Fetch artifact names
      run: |
        set -eux
        ls -l
        RELEASE_VERSION=$(echo $GITHUB_REF | sed 's/refs\/tags\/v\(.*\)/\1/')
        echo "PLUGIN_ARTIFACT_NAME=analysis-jmorphy2-$RELEASE_VERSION.zip" >> $GITHUB_ENV
        DEB_VERSION=$(echo $RELEASE_VERSION | tr - '~')
        echo "DEB_ARTIFACT_NAME=elasticsearch-analysis-jmorphy2-plugin_{DEB_VERSION}_all.zip" >> $GITHUB_ENV

    - name: Upload release zip archive
      id: upload-release-zip
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.PLUGIN_ARTIFACT_NAME }}
        asset_name: ${{ env.PLUGIN_ARTIFACT_NAME }}
        asset_content_type: application/zip

    - name: Upload release debian package
      id: upload-release-deb
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ${{ env.DEB_ARTIFACT_NAME }}
        asset_name: ${{ env.DEB_ARTIFACT_NAME }}
        asset_content_type: application/vnd.debian.binary-package
